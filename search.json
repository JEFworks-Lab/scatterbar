[{"path":"http://jef.works/scatterbar/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"http://jef.works/scatterbar/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"http://jef.works/scatterbar/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"http://jef.works/scatterbar/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"http://jef.works/scatterbar/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"http://jef.works/scatterbar/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"http://jef.works/scatterbar/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"http://jef.works/scatterbar/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"http://jef.works/scatterbar/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"http://jef.works/scatterbar/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"http://jef.works/scatterbar/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"http://jef.works/scatterbar/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"http://jef.works/scatterbar/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"http://jef.works/scatterbar/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"http://jef.works/scatterbar/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"http://jef.works/scatterbar/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"http://jef.works/scatterbar/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"http://jef.works/scatterbar/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"http://jef.works/scatterbar/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"http://jef.works/scatterbar/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"http://jef.works/scatterbar/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"http://jef.works/scatterbar/articles/customizing_scatterbar.html","id":"customizing-scatterbar","dir":"Articles","previous_headings":"","what":"Customizing scatterbar","title":"Customizing scatterbar","text":", simulate data demo purposes. create small dataset demonstrate scatterbar function. , create scatterbar plots using scatterbar function demonstrate various customization options using ggplot2.          proportions don’t add 1?","code":"# Load the scatterbar library library(scatterbar)  # Define positional data: coordinates (x, y) for each spot pos <- data.frame(x = c(1,1,2,2),                   y = c(1,2,1,2))  # Define proportional data: proportions of different categories (p1, p2, p3, p4) at each spot prop <- matrix(c(0.5, 0.5,  0,   0,                  0.5, 0,    0,   0.5,                  0,   0.5,  0.5, 0,                  0,   0,    0.5, 0.5), nrow=4)  # Assign row names to both positional and proportional data, representing the spot identifiers rownames(pos) <- rownames(prop) <- c('a','b','c','d')  # Assign column names to the proportional data, representing the categories/groups colnames(prop) <- c('Dogs', 'Cats', 'Fish', 'Snakes')  # Print out the positional data print(pos) ##   x y ## a 1 1 ## b 1 2 ## c 2 1 ## d 2 2 # Print out the positional data print(prop) ##   Dogs Cats Fish Snakes ## a  0.5  0.5  0.0    0.0 ## b  0.5  0.0  0.5    0.0 ## c  0.0  0.0  0.5    0.5 ## d  0.0  0.5  0.0    0.5 # Basic scatterbar plot with default settings scatterbar(prop, pos) ## Calculated size_x: 0.5 ## Calculated size_y: 0.5 ## Applied padding_x: 0 ## Applied padding_y: 0 # Scatterbar plot with a black-and-white theme and customized y-axis label scatterbar(prop, pos) +   ggplot2::theme_bw() + ggplot2::ylab('y') ## Calculated size_x: 0.5 ## Calculated size_y: 0.5 ## Applied padding_x: 0 ## Applied padding_y: 0 # Scatterbar plot with fixed x and y scale factors of 1 (size_x and size_y) scatterbar(prop, pos,                    size_x = 1, size_y = 1) +   ggplot2::theme_bw() + ggplot2::ylab('y') ## Calculated size_x: 1 ## Calculated size_y: 1 ## Applied padding_x: 0 ## Applied padding_y: 0 # Scatterbar plot with padding applied to the x and y axes, making the tiles slightly smaller scatterbar(prop, pos,                    size_x = 1, size_y = 1,                    padding_x = 0.1, padding_y = 0.1) +   ggplot2::theme_bw() + ggplot2::ylab('y') ## Calculated size_x: 0.9 ## Calculated size_y: 0.9 ## Applied padding_x: 0.1 ## Applied padding_y: 0.1 # Scatterbar plot with flipped coordinates, so that x and y axes are interchanged scatterbar(prop, pos,                    size_x = 1, size_y = 1,                    padding_x = 0.1, padding_y = 0.1) +   ggplot2::theme_bw() + ggplot2::ylab('y') +    ggplot2::coord_flip() ## Calculated size_x: 0.9 ## Calculated size_y: 0.9 ## Applied padding_x: 0.1 ## Applied padding_y: 0.1 # Scatterbar plot with customized legend title scatterbar(prop, pos,                    size_x = 1, size_y = 1,                    padding_x = 0.1, padding_y = 0.1, legend_title= \"Animals\") +   ggplot2::theme_bw() + ggplot2::ylab('y') ## Calculated size_x: 0.9 ## Calculated size_y: 0.9 ## Applied padding_x: 0.1 ## Applied padding_y: 0.1 # Scatterbar plot using the custom colors # Define a custom set of colors for the categories custom_colors <- c(\"#FF0000\",  # Red                    \"#00FF00\",  # Green                    \"#0000FF\",  # Blue                    \"#A020F0\")  # Purple scatterbar(prop, pos,                    size_x = 1, size_y = 1,                    padding_x = 0.1, padding_y = 0.1, legend_title= \"Animals\", colors=custom_colors) +   ggplot2::theme_bw() + ggplot2::ylab('y') ## Calculated size_x: 0.9 ## Calculated size_y: 0.9 ## Applied padding_x: 0.1 ## Applied padding_y: 0.1 # Scatterbar plot with title scatterbar(prop, pos,                    size_x = 1, size_y = 1,                    padding_x = 0.1, padding_y = 0.1, legend_title= \"Animals\", colors=custom_colors) +   ggplot2::theme_bw() + ggplot2::ylab('y') + ggplot2::labs(title=\"Favorite Animals Among Classrooms\") ## Calculated size_x: 0.9 ## Calculated size_y: 0.9 ## Applied padding_x: 0.1 ## Applied padding_y: 0.1 # Scatterbar plot modifying the order of categories plotted  scatterbar(prop[, c(\"Fish\", \"Snakes\", \"Cats\", \"Dogs\")], pos,                    size_x = 1, size_y = 1,                    padding_x = 0.1, padding_y = 0.1, legend_title= \"Animals\", colors=custom_colors) +   ggplot2::theme_bw() + ggplot2::ylab('y') + ggplot2::labs(title=\"Favorite Animals Among Classrooms\") ## Calculated size_x: 0.9 ## Calculated size_y: 0.9 ## Applied padding_x: 0.1 ## Applied padding_y: 0.1 # Define a new proportional data matrix where proportions do not sum to 1 prop <- matrix(c(0.1, 0.2,  0,   0,                  0.1, 0,    0,   0.4,                  0,   0.2,  0.3, 0,                  0,   0,    0.3, 0.4), nrow=4)  # Assign row names representing the spots rownames(prop) <- c('a','b','c','d')  # Assign column names representing the categories/groups colnames(prop) <- c('Dogs', 'Cats', 'Fish', 'Snakes')  # Print the new proportional data print(prop) ##   Dogs Cats Fish Snakes ## a  0.1  0.1  0.0    0.0 ## b  0.2  0.0  0.2    0.0 ## c  0.0  0.0  0.3    0.3 ## d  0.0  0.4  0.0    0.4 # Create a scatterbar plot with the new data scatterbar(prop, pos) ## Calculated size_x: 0.5 ## Calculated size_y: 0.5 ## Applied padding_x: 0 ## Applied padding_y: 0 # Customize the scatterbar plot using a black-and-white theme and customized y-axis label scatterbar(prop, pos) +   ggplot2::theme_bw() + ggplot2::ylab('y') ## Calculated size_x: 0.5 ## Calculated size_y: 0.5 ## Applied padding_x: 0 ## Applied padding_y: 0 # Create a scatterbar plot with fixed x and y scales and customized theme scatterbar(prop, pos,                    size_x = 1, size_y = 1) +   ggplot2::theme_bw() + ggplot2::ylab('y') ## Calculated size_x: 1 ## Calculated size_y: 1 ## Applied padding_x: 0 ## Applied padding_y: 0 # Apply padding to the scatterbar plot to make the tiles smaller scatterbar(prop, pos,                    size_x = 1, size_y = 1,                    padding_x = 0.1, padding_y = 0.1) +   ggplot2::theme_bw() + ggplot2::ylab('y') ## Calculated size_x: 0.9 ## Calculated size_y: 0.9 ## Applied padding_x: 0.1 ## Applied padding_y: 0.1 # Scatterbar plot with flipped coordinates scatterbar(prop, pos,                    size_x = 1, size_y = 1,                    padding_x = 0.1, padding_y = 0.1) +   ggplot2::theme_bw() + ggplot2::ylab('y') +    ggplot2::coord_flip() ## Calculated size_x: 0.9 ## Calculated size_y: 0.9 ## Applied padding_x: 0.1 ## Applied padding_y: 0.1 # Scatterbar plot with customized legend title scatterbar(prop, pos,                    size_x = 1, size_y = 1,                    padding_x = 0.1, padding_y = 0.1, legend_title= \"Animals\") +   ggplot2::theme_bw() + ggplot2::ylab('y') ## Calculated size_x: 0.9 ## Calculated size_y: 0.9 ## Applied padding_x: 0.1 ## Applied padding_y: 0.1 # Scatterbar plot using the custom colors # Define a custom set of colors for the categories custom_colors <- c(\"#FF0000\",  # Red                    \"#00FF00\",  # Green                    \"#0000FF\",  # Blue                    \"#A020F0\")  # Purple scatterbar(prop, pos,                    size_x = 1, size_y = 1,                    padding_x = 0.1, padding_y = 0.1, legend_title= \"Animals\", colors=custom_colors) +   ggplot2::theme_bw() + ggplot2::ylab('y') ## Calculated size_x: 0.9 ## Calculated size_y: 0.9 ## Applied padding_x: 0.1 ## Applied padding_y: 0.1 # Scatterbar plot with title scatterbar(prop, pos,                    size_x = 1, size_y = 1,                    padding_x = 0.1, padding_y = 0.1, legend_title= \"Animals\", colors=custom_colors) +   ggplot2::theme_bw() + ggplot2::ylab('y') + ggplot2::labs(title=\"Favorite Animals Among Classrooms\") ## Calculated size_x: 0.9 ## Calculated size_y: 0.9 ## Applied padding_x: 0.1 ## Applied padding_y: 0.1 # Scatterbar plot modifying the order of categories plotted  scatterbar(prop[, c(\"Fish\", \"Snakes\", \"Cats\", \"Dogs\")], pos,                    size_x = 1, size_y = 1,                    padding_x = 0.1, padding_y = 0.1, legend_title= \"Animals\", colors=custom_colors) +   ggplot2::theme_bw() + ggplot2::ylab('y') + ggplot2::labs(title=\"Favorite Animals Among Classrooms\") ## Calculated size_x: 0.9 ## Calculated size_y: 0.9 ## Applied padding_x: 0.1 ## Applied padding_y: 0.1"},{"path":"http://jef.works/scatterbar/articles/flipping-scatterbar-oreintations.html","id":"flipping-scatterbar-oreintations-and-positions","dir":"Articles","previous_headings":"","what":"Flipping scatterbar oreintations and positions","title":"Flipping scatterbar oreintations and positions","text":"tutorial demonstrates change orientation scatterbar plot using scatterbar package. Specifically, flip x y coordinates create alternative view data. , flip x y coordinates pos data frame change orientation whole scatterbar plot, adult mouse brain now displayed horizontally.  can also change orientation stacked bar charts displayed. coord_flip(), adult mouse brain now displayed vertically , stacked bar charts now displayed horizontally.","code":"# Load packages and example adult mouse brain dataset library(scatterbar) library(ggplot2)  data(\"adult_mouse_brain_ffpe\") # Flip the x and y columns of the position data flipped_pos <- adult_mouse_brain_ffpe$pos[, c(2,1)] # Rename the columns to ensure the position data has the correct column names colnames(flipped_pos) <- c('x','y') # Create the scatterbar plot with the flipped position data start.time <- Sys.time() scatterbar::scatterbar(adult_mouse_brain_ffpe$prop,                         flipped_pos, padding_x = 0.3, padding_y = 0.3,                        size_x = 220, size_y = 220,                        legend_title = \"Cell Types\") + coord_fixed() #> Calculated size_x: 219.7 #> Calculated size_y: 219.7 #> Applied padding_x: 0.3 #> Applied padding_y: 0.3 end.time <- Sys.time() print(end.time - start.time) #> Time difference of 0.3104167 secs # Create the scatterbar plot with the flipped scatterbar oreintation start.time <- Sys.time() scatterbar::scatterbar(adult_mouse_brain_ffpe$prop,                         flipped_pos, padding_x = 0.3, padding_y = 0.3,                        size_x = 220, size_y = 220,                        legend_title = \"Cell Types\") + coord_fixed() + coord_flip() #> Calculated size_x: 219.7 #> Calculated size_y: 219.7 #> Applied padding_x: 0.3 #> Applied padding_y: 0.3 #> Coordinate system already present. Adding new coordinate system, which will #> replace the existing one. end.time <- Sys.time() print(end.time - start.time) #> Time difference of 0.3728185 secs"},{"path":"http://jef.works/scatterbar/articles/getting-started-with-scatterbars.html","id":"getting-started-with-scatterbars","dir":"Articles","previous_headings":"","what":"Getting started with scatterbars","title":"Getting started with scatterbars","text":"use scatterbar provided spatial transcriptomic data mouse olfactory bulb tissue sample.   can change order bar laid changing order cell-type proportion matrix spatial transcriptomic data. can also combine scatterbar ggplot geoms customization!","code":"library(scatterbar) data(\"mOB\")  plot(mOB$xy) head(mOB$data) ##                            1          2         3          4         5 ## ACAACTATGGGTTGGCGG 0.1420916 0.05540521 0.2902388 0.00000000 0.1657935 ## ACACAGATCCTGTTCTGA 0.0000000 0.77541118 0.0000000 0.00000000 0.0000000 ## ACATCACCTGCGCGCTCT 0.3360811 0.00000000 0.0000000 0.32262562 0.3412932 ## ACATTTAAGGCGCATGAT 0.2239877 0.00000000 0.0000000 0.55189741 0.2241149 ## ACCACTGTAATCTCCCAT 0.1373168 0.08529107 0.2204332 0.00000000 0.0000000 ## ACCAGAGCCGTTGAGCAA 0.1364591 0.37986322 0.1499492 0.06702756 0.2147332 ##                             6         7          8 ## ACAACTATGGGTTGGCGG 0.00000000 0.1329341 0.21353679 ## ACACAGATCCTGTTCTGA 0.14536750 0.0000000 0.07922131 ## ACATCACCTGCGCGCTCT 0.00000000 0.0000000 0.00000000 ## ACATTTAAGGCGCATGAT 0.00000000 0.0000000 0.00000000 ## ACCACTGTAATCTCCCAT 0.00000000 0.1876818 0.36927715 ## ACCAGAGCCGTTGAGCAA 0.05196769 0.0000000 0.00000000 start.time <- Sys.time() scatterbar::scatterbar(mOB$data, mOB$xy) + ggplot2::coord_fixed() ## Calculated size_x: 1.24034734589208 ## Calculated size_y: 0.930260509419063 ## Applied padding_x: 0 ## Applied padding_y: 0 end.time <- Sys.time() print(end.time - start.time) ## Time difference of 0.2511313 secs library(ggplot2) start.time <- Sys.time() scatterbar::scatterbar(mOB$data[, c(2,3,4,5,6,7,8,1)], mOB$xy, size_x = 1, size_y = 1, padding_x = 0.1, padding_y = 0.1) +   geom_point(data=mOB$xy, mapping=aes(x=x, y=y)) +   theme_bw() + ylab('y') + ggplot2::coord_fixed() ## Calculated size_x: 0.9 ## Calculated size_y: 0.9 ## Applied padding_x: 0.1 ## Applied padding_y: 0.1 end.time <- Sys.time() print(end.time - start.time) ## Time difference of 0.3094857 secs"},{"path":"http://jef.works/scatterbar/articles/using-scatterbar-with-visium.html","id":"using-scatterbar-with-visium-data","dir":"Articles","previous_headings":"","what":"Using scatterbar with Visium data","title":"Using scatterbar with Visium data","text":"use scatterbar provided Visium dataset FFPE preserved adult mouse brain partial coronal section 10X Genomics.   Just like mOB data, can change order bar laid changing order cell-type proportion matrix combine scatterbar ggplot geoms customization.","code":"library(scatterbar) library(ggplot2) data(\"adult_mouse_brain_ffpe\")  plot(adult_mouse_brain_ffpe$pos) head(adult_mouse_brain_ffpe$prop) #>                            1          2         3         4         5         6 #> AAACAGAGCGACTCCT-1 0.1264103 0.00000000 0.0000000 0.2183626 0.0000000 0.0000000 #> AAACCCGAACGAAATC-1 0.0000000 0.00000000 0.0000000 0.0000000 0.1612265 0.7494948 #> AAACCGGGTAGGTACC-1 0.2881994 0.32242398 0.0000000 0.3893766 0.0000000 0.0000000 #> AAACCGTTCGTCCAGG-1 0.3040547 0.27785934 0.2535515 0.0000000 0.0000000 0.0000000 #> AAACGAAGAACATACC-1 0.1585737 0.09403518 0.0000000 0.3510139 0.0000000 0.0000000 #> AAACGAGACGGTTGAT-1 0.0000000 0.00000000 0.2962469 0.0000000 0.0000000 0.0000000 #>                            7 8          9 10         11         12 #> AAACAGAGCGACTCCT-1 0.1865617 0 0.07496736  0 0.39369799 0.00000000 #> AAACCCGAACGAAATC-1 0.0000000 0 0.00000000  0 0.00000000 0.08927876 #> AAACCGGGTAGGTACC-1 0.0000000 0 0.00000000  0 0.00000000 0.00000000 #> AAACCGTTCGTCCAGG-1 0.0768548 0 0.00000000  0 0.08767969 0.00000000 #> AAACGAAGAACATACC-1 0.2808292 0 0.00000000  0 0.11554800 0.00000000 #> AAACGAGACGGTTGAT-1 0.0000000 0 0.00000000  0 0.00000000 0.70375311  start.time <- Sys.time() scatterbar(   adult_mouse_brain_ffpe$prop,   adult_mouse_brain_ffpe$pos,   size_x = 220,   size_y = 220,   legend_title = \"Cell Types\" ) + coord_fixed() #> Calculated size_x: 220 #> Calculated size_y: 220 #> Applied padding_x: 0 #> Applied padding_y: 0 end.time <- Sys.time() print(end.time - start.time) #> Time difference of 0.4518275 secs start.time <- Sys.time() custom_colors <- c('1'= '#5d6f99',     '2' = '#985a39',     '3' =  '#d6589a',     '4' = '#4d1395',     '5' = '#b5ef27',     '6' = '#77d5bc',     '7' = '#7830d2',     '8' ='#b43b59',     '9' = '#1c40b1',     '10' = \"#FF5733\",     '11' = '#FFFF00',     '12' = '#f4a6f1') scatterbar::scatterbar(adult_mouse_brain_ffpe$prop[, c(2,3,4,11,5,6,10,7,8,1,9, 12)], adult_mouse_brain_ffpe$pos, size_x = 220, size_y = 220, padding_x = 0.1, padding_y = 0.1, legend_title = 'Cell Type', colors = custom_colors) +   geom_point(data=adult_mouse_brain_ffpe$pos, mapping=aes(x=x, y=y), size = 0.1) +   theme_bw() + ylab('y') + ggplot2::coord_fixed() #> Calculated size_x: 219.9 #> Calculated size_y: 219.9 #> Applied padding_x: 0.1 #> Applied padding_y: 0.1 end.time <- Sys.time() print(end.time - start.time) #> Time difference of 0.3830838 secs"},{"path":"http://jef.works/scatterbar/articles/visualizing-multiple-datasets.html","id":"visualizing-multiple-datasets-with-scatterbar","dir":"Articles","previous_headings":"","what":"Visualizing multiple datasets with scatterbar","title":"Visualizing multiple datasets with scatterbar","text":"tutorial demonstrates visualize multiple datasets together, utilizing package patchwork. can load datasets provided scatterbar create respective scatterbars using datasets save variable. can load patchwork visualize scatterbars one plot.","code":"library(scatterbar) library(ggplot2)  data(\"mOB\") data(\"adult_mouse_brain_ffpe\")  # Basic scatterbar plot with default settings p1 <- scatterbar(mOB$data, mOB$xy) + coord_fixed() #> Calculated size_x: 1.24034734589208 #> Calculated size_y: 0.930260509419063 #> Applied padding_x: 0 #> Applied padding_y: 0 p2 <- scatterbar(adult_mouse_brain_ffpe$prop, adult_mouse_brain_ffpe$pos) + coord_fixed() #> Calculated size_x: 302.260275014085 #> Calculated size_y: 323.465991707814 #> Applied padding_x: 0 #> Applied padding_y: 0 library(patchwork) p1 + p2"},{"path":"http://jef.works/scatterbar/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dee Velazquez. Author, maintainer. Jean Fan. Author, reviewer.","code":""},{"path":"http://jef.works/scatterbar/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Velazquez D, Fan J (2025). scatterbar: Scattered Stacked Bar Chart Plots. R package version 0.1.0, http://jef.works/scatterbar/, https://github.com/JEFworks-Lab/scatterbar.","code":"@Manual{,   title = {scatterbar: Scattered Stacked Bar Chart Plots},   author = {Dee Velazquez and Jean Fan},   year = {2025},   note = {R package version 0.1.0, http://jef.works/scatterbar/},   url = {https://github.com/JEFworks-Lab/scatterbar}, }"},{"path":"http://jef.works/scatterbar/index.html","id":"scatterbar","dir":"","previous_headings":"","what":"Scattered Stacked Bar Chart Plots","title":"Scattered Stacked Bar Chart Plots","text":"scatterbar open-source R package displaying proportional data across spatially resolved contexts. scatterbar R documentation website. Questions, suggestions, problems submitted GitHub issues.","code":""},{"path":"http://jef.works/scatterbar/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Scattered Stacked Bar Chart Plots","text":"combining concepts scatter plots stacked bar charts, scatterbar allows users visualize variations proportional data data compare across different spatial locations.","code":""},{"path":"http://jef.works/scatterbar/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Scattered Stacked Bar Chart Plots","text":"install scatterbarfrom GitHub, recommend using remotes:","code":"require(remotes) remotes::install_github('JEFworks-Lab/scatterbar')"},{"path":"http://jef.works/scatterbar/index.html","id":"tutorials","dir":"","previous_headings":"","what":"Tutorials","title":"Scattered Stacked Bar Chart Plots","text":"Customizing Scatterbar Getting Started Scatterbar Using Scatterbar Visium Files Visualizing Multiple Datasets Flipping Scatterbar Oreintations","code":""},{"path":"http://jef.works/scatterbar/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Scattered Stacked Bar Chart Plots","text":"paper describing scatterbar available Oxford Bioinformatics: Velazquez D. et al. (2025), “scatterbar: R package visualizing proportional data across spatially resolved coordinates”, Bioinformatics","code":""},{"path":"http://jef.works/scatterbar/reference/adult_mouse_brain_ffpe.html","id":null,"dir":"Reference","previous_headings":"","what":"Deconvolved cell-type proportions from STdeconvolve for a Visium data from the adult mouse brain along with the positions of their respective spots — adult_mouse_brain_ffpe","title":"Deconvolved cell-type proportions from STdeconvolve for a Visium data from the adult mouse brain along with the positions of their respective spots — adult_mouse_brain_ffpe","text":"Deconvolved cell-type proportions STdeconvolve Visium data adult mouse brain along positions respective spots","code":""},{"path":"http://jef.works/scatterbar/reference/adult_mouse_brain_ffpe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deconvolved cell-type proportions from STdeconvolve for a Visium data from the adult mouse brain along with the positions of their respective spots — adult_mouse_brain_ffpe","text":"","code":"data(adult_mouse_brain_ffpe)"},{"path":"http://jef.works/scatterbar/reference/adult_mouse_brain_ffpe.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Deconvolved cell-type proportions from STdeconvolve for a Visium data from the adult mouse brain along with the positions of their respective spots — adult_mouse_brain_ffpe","text":"list 2 objects, 2264 rows 2 columns: prop, contains 12 deconvolved cell-types proportions 2264 spots/pixels spatial transcriptomics experiment performed adult mouse brain tissue tissue pos, contains x y-coordinates 2264 spots/pixels adult mouse brain tissue slide.","code":""},{"path":"http://jef.works/scatterbar/reference/adult_mouse_brain_ffpe.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Deconvolved cell-type proportions from STdeconvolve for a Visium data from the adult mouse brain along with the positions of their respective spots — adult_mouse_brain_ffpe","text":"https://www.10xgenomics.com/datasets/adult-mouse-brain-ffpe-1-standard-1-3-0","code":""},{"path":"http://jef.works/scatterbar/reference/mOB.html","id":null,"dir":"Reference","previous_headings":"","what":"Deconvolved cell-type proportions from STdeconvolve for a Spatial Transcriptomic dataset of the mouse olfactory bulb along with the positions of their respective spots — mOB","title":"Deconvolved cell-type proportions from STdeconvolve for a Spatial Transcriptomic dataset of the mouse olfactory bulb along with the positions of their respective spots — mOB","text":"Deconvolved cell-type proportions STdeconvolve Spatial Transcriptomic dataset mouse olfactory bulb along positions respective spots","code":""},{"path":"http://jef.works/scatterbar/reference/mOB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deconvolved cell-type proportions from STdeconvolve for a Spatial Transcriptomic dataset of the mouse olfactory bulb along with the positions of their respective spots — mOB","text":"","code":"data(mOB)"},{"path":"http://jef.works/scatterbar/reference/mOB.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Deconvolved cell-type proportions from STdeconvolve for a Spatial Transcriptomic dataset of the mouse olfactory bulb along with the positions of their respective spots — mOB","text":"list 2 objects, 260 rows 2 columns: data, contains 8 deconvolved cell-types proportions 260 spots/pixels spatial transcriptomics experiment performed mouse olfactory bulb tissue xy, contains x y-coordinates 260 spots/pixels mouse olfactory bulb tissue slide.","code":""},{"path":"http://jef.works/scatterbar/reference/mOB.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Deconvolved cell-type proportions from STdeconvolve for a Spatial Transcriptomic dataset of the mouse olfactory bulb along with the positions of their respective spots — mOB","text":"https://www.science.org/doi/10.1126/science.aaf2403","code":""},{"path":"http://jef.works/scatterbar/reference/scatterbar.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a scattered stacked bar chart plot — scatterbar","title":"Create a scattered stacked bar chart plot — scatterbar","text":"function creates scatterbar plot using ggplot2, bars stacked based different proportions groups 2-D location/spot. scatterbar plot combination scatter plot stacked bar chart, allowing visualization proportional data across spatial coordinates. function allows customized scaling factors padding creating plot. scaling factors specified, function automatically determines optimal scaling factors based data.","code":""},{"path":"http://jef.works/scatterbar/reference/scatterbar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a scattered stacked bar chart plot — scatterbar","text":"","code":"scatterbar(   data,   xy,   size_x = NULL,   size_y = NULL,   padding_x = 0,   padding_y = 0,   show_legend = TRUE,   legend_title = \"Group\",   colors = NULL,   verbose = TRUE )"},{"path":"http://jef.works/scatterbar/reference/scatterbar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a scattered stacked bar chart plot — scatterbar","text":"data data frame containing proportions different categories location. row represents location, column (except row names) represents category. xy data frame containing positional information location. data frame includes x y coordinates location/spot (respective row names). size_x X-axis scaling factor (default NULL). provided, automatically calculated based data. size_y Y-axis scaling factor (default NULL). provided, automatically calculated based data. padding_x Padding x-axis (default 0). padding_y Padding y-axis (default 0). show_legend Boolean indicating whether display plot legend (default TRUE). legend_title Custom title legend (default \"Group\"). colors Optional vector colors use category (default NULL). provided, default palette used. verbose Boolean indicating whether print calculated scaling padding values (default TRUE).","code":""},{"path":"http://jef.works/scatterbar/reference/scatterbar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a scattered stacked bar chart plot — scatterbar","text":"ggplot object representing scattered stacked bar chart plot.","code":""},{"path":"http://jef.works/scatterbar/reference/scatterbar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a scattered stacked bar chart plot — scatterbar","text":"","code":"data(mOB) scatterbar(mOB$data, mOB$xy, padding_x = 0.3, padding_y = 0.3, legend_title = \"Cell Types\") #> Calculated size_x: 0.940347345892085 #> Calculated size_y: 0.630260509419063 #> Applied padding_x: 0.3 #> Applied padding_y: 0.3   data(adult_mouse_brain_ffpe) scatterbar( adult_mouse_brain_ffpe$prop, adult_mouse_brain_ffpe$pos, size_x = 220, size_y = 220, legend_title = \"Cell Types\") #> Calculated size_x: 220 #> Calculated size_y: 220 #> Applied padding_x: 0 #> Applied padding_y: 0"},{"path":"http://jef.works/scatterbar/news/index.html","id":"scatterbar-010","dir":"Changelog","previous_headings":"","what":"scatterbar 0.1.0","title":"scatterbar 0.1.0","text":"CRAN release: 2024-11-25 Initial CRAN submission.","code":""}]
